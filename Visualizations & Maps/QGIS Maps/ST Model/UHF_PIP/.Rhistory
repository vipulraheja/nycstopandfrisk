data <- read.csv('SF_Counts_SubBorough.csv')
data_filtered <- data[,3:9]
setwd("E:/Fall 2013/Intro to Data Science/Project/Visualization/Data/STModel")
data <- read.csv('SF_Counts_SubBorough.csv')
data_filtered <- data[,3:9]
library('forecast')
astoria_sf<-ts(data_filtered[i,])
i = 1
astoria_sf<-ts(data_filtered[i,])
astoria_sf
astoria_arima <- arima(astoria_sf, order=c(0,0,0), start=2006)
astoria_arima <- arima(astoria_sf, order=c(0,0,0), start=c(2006))
astoria_sf<-ts(data_filtered[i,],start=c(2006))
astoria_sf
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_sf
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_arima
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
astoria_forecasts
astoria_forecasts[1]
astoria_forecasts[2]
astoria_forecasts[3]
astoria_forecasts[4]
astoria_forecasts[5]
astoria_forecasts[6]
astoria_forecasts[6][1]
astoria_forecasts[6,1]
astoria_forecasts[6]$upper
astoria_forecasts[6]$upper[1]
astoria_forecasts[5]$lower[1]
for (i in 2:nrow(data_filtered){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
prediction <- c()
for (i in 2:nrow(data_filtered){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
prediction <- c()
for (i in 2:nrow(data_filtered)){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
prediction
t(prediction)
prediction
?write.csv
write.csv(t(prediction), 'predicted.csv')
data <- read.csv('SF_Counts_SubBorough.csv')
data_filtered <- data[,3:9]
prediction <- c()
for (i in 1:nrow(data_filtered)){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
write.csv(t(prediction), 'predicted.csv')
data <- read.csv('SF_Counts_SubBorough.csv')
data_filtered <- data[,3:9]
prediction <- c()
for (i in 1:nrow(data_filtered)){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
write.csv(t(prediction), 'predicted.csv')
data <- read.csv('SF_Counts_UHF42.csv')
data <- read.csv('SF_Counts_UHF42.csv')
setwd("E:/Fall 2013/Intro to Data Science/Project/Visualization/Data/STModel/UHF_PIP")
data <- read.csv('SF_Counts_UHF42.csv')
data_filtered <- data[,3:9]
data
data_filtered <- data[,3:8]
prediction <- c()
i = 1
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
astoria_forecasts
astoria_forecasts[6]
astoria_forecasts[5]
# Find ARIMA Predictions for every sub-borough
# based on every
data <- read.csv('SF_Counts_UHF42.csv')
data_filtered <- data[,3:9]
prediction <- c()
for (i in 1:nrow(data_filtered)){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
write.csv(t(prediction), 'predicted.csv')
data <- read.csv('SF_Counts_UHF42.csv')
data
data <- read.csv('SF_Counts_UHF42.csv')
data_filtered <- data[,3:9]
prediction <- c()
for (i in 1:nrow(data_filtered)){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
write.csv(t(prediction), 'predicted.csv')
data <- read.csv('SF_Counts_UHF42.csv')
data_filtered <- data[,3:9]
prediction <- c()
for (i in 1:nrow(data_filtered)){
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_arima <- arima(astoria_sf, order=c(0,0,0))
astoria_forecasts <- forecast.Arima(astoria_arima,h=1)
upper <- astoria_forecasts[6]$upper[1]
lower <- astoria_forecasts[5]$lower[1]
prediction[i] <- (upper+lower)/2
}
write.csv(t(prediction), 'predicted.csv')
data <- read.csv('SF_Counts_STInput.csv')
data
data_filtered <- data[,3:9]
data_filtered
data_values <- data[,9:16]
data_values <- data[,9:15]
data_params <- data[,3:8]
data_params
data_values <- data[,9]
data_values <- data[,9:14]
data_values
astoria_sf<-ts(t(data_filtered[i,]),start=c(2006))
astoria_sf
astoria_sf<-ts(t(data_values[i,]),start=c(2006))
astoria_sf<-ts(t(data_values[i,]),start=c(2006))
i = 1
astoria_sf<-ts(t(data_values[i,]),start=c(2006))
astoria_sf
astoria_params<-ts(t(data_values[i,]),start=c(2006))
astoria_params
astoria_params<-ts(t(data_params[i,]),start=c(2006))
astoria_params
fit <- lm(astoria_sf ~ astoria_params)
summary(fit)
library(maptools)
install.packages('maptools')
library('maptools')
install.packages('gwr')
library('gwr')
library('spgwr')
install.packages('spgwr')
library('spgwr')
xx <- readShapePoly(system.file("2008pip.shp"),package="maptools")[1],IDvar="FIPSNO",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1],IDvar="FIPSNO",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1],IDvar="FIPSNO",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1],IDvar="FIPSNO",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1],IDvar="FIPSNO",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1],IDvar="borr_sub",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1],IDvar="BORR_Sub",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
?readShapePoly
xx <- readShapePoly(system.file("2008pip.shp",package="maptools")[1])
xx <- readShapePoly("2008pip",IDvar="borr_sub",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
xx <- readShapePoly(system.file("2008pip",package="maptools")[1],IDvar="BORR_Sub",proj4string=CRS("+proj=lcc +lat_1=40.66666666666666 +lat_2=41.03333333333333 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=us-ft +no_defs"))
install.packages('shapefiles')
library('shapefiles')
read.shapefile("2008pip")
xx <- read.shapefile("2008pip")
