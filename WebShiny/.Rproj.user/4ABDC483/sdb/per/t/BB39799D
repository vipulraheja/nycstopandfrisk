{
    "contents" : "######################################\n### Frisk and Stop Data - server.R ###\n######################################\nlibrary(shiny) # load shiny at beginning at both scripts\nlibrary(ggplot2) #load ggplot2\n\n#Time analysis preprocessing\nload(file=\"timeSeriesAnalysis.RData\")\nload(file=\"clustering.RData\")\nload(file=\"logitAnalysisSample.RData\")\nresult$date <- as.character(paste(result$YEAR, result$MONTH, \"1\", sep = \"-\"))\nresult$date <- as.Date(result$date, \"%Y-%m-%d\")\nresult$severity <- as.factor(result$severity)\nyears <- 2006:2012\n\nshinyServer(function(input, output) { \n  \n  #Render Clusters\n  output$cluster.k <- renderTable({\n    theClusters <- switch(input$num.clusters, \"df.cluster.2\" = df.cluster.2, \"df.cluster.3\" = df.cluster.3,\n                     \"df.cluster.4\" = df.cluster.4, \"df.cluster.5\" = df.cluster.5,\n                     \"df.cluster.6\" = df.cluster.6, \"df.cluster.7\" = df.cluster.7)\n  })\n  \n  #Time Series Graph\n  output$time.series.graph <- renderPlot({\n    \n    precinct <- as.numeric(input$precinct)\n    plot.data <- result[result$PCT==precinct,]\n    \n    #filter bad data\n    plot.data <- plot.data[plot.data$YEAR %in% years,]\n    \n    theGraph <- ggplot(plot.data, aes(date, count, color=severity)) + geom_line() + \n      xlab(\"Year\") + ylab(\"Count of Crime\") + \n      ggtitle(paste0(\"Number of Stops Made in Precinct \", precinct)) +\n      theme (panel.background = element_blank(),\n             legend.background = element_blank(),\n             plot.background = element_blank()) +\n      labs(color=\"Crime Severity\")\n    \n    try(\n    if (input$finance) {\n      theGraph <- theGraph + geom_vline(xintercept=as.numeric(as.Date(\"2008-09-01\", \"%Y-%m-%d\")), \n                                        linetype=\"dotted\", size=1.25)\n    }, silent=TRUE)\n    \n    try(\n    if (input$sandy) {\n      theGraph <- theGraph + geom_vline(xintercept=as.numeric(as.Date(\"2012-10-01\", \"%Y-%m-%d\")), \n                                        linetype=\"dotted\", size=1.25)\n    }, silent=TRUE)\n    \n    print(theGraph)\n  }, bg=\"transparent\")\n  \n  \n  #Render regression model\n  output$regressionDisplay1 <- renderText({ \n    \n    newInput <- data.frame(RACE = input$race, SEX = as.character(input$gender), AGE = as.numeric(input$age.model), \n                           WEAPON = input$weapon, PCT = input$precinct.model,\n                           HOUR = as.numeric(input$hour.model))\n    \n    newInput$FRISKED <- predict(FRlogit, newdata = newInput, type = \"response\")\n    \n    sprintf(\"Probability of getting frisked is %s\", \n            format(round(newInput$FRISKED,3), nsmall=3))\n  })\n  \n  output$regressionDisplay2 <- renderText({ \n    \n    newInput <- data.frame(RACE = input$race, SEX = as.character(input$gender), AGE = as.numeric(input$age.model), \n                           WEAPON = input$weapon, PCT = input$precinct.model,\n                           HOUR = as.numeric(input$hour.model))\n    print(newInput)\n    newInput$SEARCHED <- predict(SRlogit, newdata = newInput, type = \"response\")\n    \n    sprintf(\"Probability of getting searched is %s\", \n            format(round(newInput$SEARCHED, 3), nsmall=3))\n  })\n  \n})\n\n\n\n",
    "created" : 1386639491952.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "305256255",
    "id" : "BB39799D",
    "lastKnownWriteTime" : 1387165347,
    "path" : "~/Dropbox/2013-2/IntroDataScience/CourseProject/Web/server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}